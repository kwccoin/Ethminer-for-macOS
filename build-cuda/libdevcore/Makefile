# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.8

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/Cellar/cmake/3.8.2/bin/cmake

# The command to remove a file.
RM = /usr/local/Cellar/cmake/3.8.2/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Users/wsd/github-clone/Ethminer-for-macOS

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components

.PHONY : list_install_components/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/Cellar/cmake/3.8.2/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/local/Cellar/cmake/3.8.2/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(CMAKE_COMMAND) -E cmake_progress_start /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda/CMakeFiles /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda/libdevcore/CMakeFiles/progress.marks
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f CMakeFiles/Makefile2 libdevcore/all
	$(CMAKE_COMMAND) -E cmake_progress_start /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f CMakeFiles/Makefile2 libdevcore/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f CMakeFiles/Makefile2 libdevcore/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f CMakeFiles/Makefile2 libdevcore/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
libdevcore/CMakeFiles/devcore.dir/rule:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f CMakeFiles/Makefile2 libdevcore/CMakeFiles/devcore.dir/rule
.PHONY : libdevcore/CMakeFiles/devcore.dir/rule

# Convenience name for target.
devcore: libdevcore/CMakeFiles/devcore.dir/rule

.PHONY : devcore

# fast build rule for target.
devcore/fast:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/build
.PHONY : devcore/fast

Base64.o: Base64.cpp.o

.PHONY : Base64.o

# target to build an object file
Base64.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Base64.cpp.o
.PHONY : Base64.cpp.o

Base64.i: Base64.cpp.i

.PHONY : Base64.i

# target to preprocess a source file
Base64.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Base64.cpp.i
.PHONY : Base64.cpp.i

Base64.s: Base64.cpp.s

.PHONY : Base64.s

# target to generate assembly for a file
Base64.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Base64.cpp.s
.PHONY : Base64.cpp.s

Common.o: Common.cpp.o

.PHONY : Common.o

# target to build an object file
Common.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Common.cpp.o
.PHONY : Common.cpp.o

Common.i: Common.cpp.i

.PHONY : Common.i

# target to preprocess a source file
Common.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Common.cpp.i
.PHONY : Common.cpp.i

Common.s: Common.cpp.s

.PHONY : Common.s

# target to generate assembly for a file
Common.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Common.cpp.s
.PHONY : Common.cpp.s

CommonData.o: CommonData.cpp.o

.PHONY : CommonData.o

# target to build an object file
CommonData.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonData.cpp.o
.PHONY : CommonData.cpp.o

CommonData.i: CommonData.cpp.i

.PHONY : CommonData.i

# target to preprocess a source file
CommonData.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonData.cpp.i
.PHONY : CommonData.cpp.i

CommonData.s: CommonData.cpp.s

.PHONY : CommonData.s

# target to generate assembly for a file
CommonData.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonData.cpp.s
.PHONY : CommonData.cpp.s

CommonIO.o: CommonIO.cpp.o

.PHONY : CommonIO.o

# target to build an object file
CommonIO.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonIO.cpp.o
.PHONY : CommonIO.cpp.o

CommonIO.i: CommonIO.cpp.i

.PHONY : CommonIO.i

# target to preprocess a source file
CommonIO.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonIO.cpp.i
.PHONY : CommonIO.cpp.i

CommonIO.s: CommonIO.cpp.s

.PHONY : CommonIO.s

# target to generate assembly for a file
CommonIO.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonIO.cpp.s
.PHONY : CommonIO.cpp.s

CommonJS.o: CommonJS.cpp.o

.PHONY : CommonJS.o

# target to build an object file
CommonJS.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonJS.cpp.o
.PHONY : CommonJS.cpp.o

CommonJS.i: CommonJS.cpp.i

.PHONY : CommonJS.i

# target to preprocess a source file
CommonJS.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonJS.cpp.i
.PHONY : CommonJS.cpp.i

CommonJS.s: CommonJS.cpp.s

.PHONY : CommonJS.s

# target to generate assembly for a file
CommonJS.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/CommonJS.cpp.s
.PHONY : CommonJS.cpp.s

FileSystem.o: FileSystem.cpp.o

.PHONY : FileSystem.o

# target to build an object file
FileSystem.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FileSystem.cpp.o
.PHONY : FileSystem.cpp.o

FileSystem.i: FileSystem.cpp.i

.PHONY : FileSystem.i

# target to preprocess a source file
FileSystem.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FileSystem.cpp.i
.PHONY : FileSystem.cpp.i

FileSystem.s: FileSystem.cpp.s

.PHONY : FileSystem.s

# target to generate assembly for a file
FileSystem.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FileSystem.cpp.s
.PHONY : FileSystem.cpp.s

FixedHash.o: FixedHash.cpp.o

.PHONY : FixedHash.o

# target to build an object file
FixedHash.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FixedHash.cpp.o
.PHONY : FixedHash.cpp.o

FixedHash.i: FixedHash.cpp.i

.PHONY : FixedHash.i

# target to preprocess a source file
FixedHash.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FixedHash.cpp.i
.PHONY : FixedHash.cpp.i

FixedHash.s: FixedHash.cpp.s

.PHONY : FixedHash.s

# target to generate assembly for a file
FixedHash.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/FixedHash.cpp.s
.PHONY : FixedHash.cpp.s

Guards.o: Guards.cpp.o

.PHONY : Guards.o

# target to build an object file
Guards.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Guards.cpp.o
.PHONY : Guards.cpp.o

Guards.i: Guards.cpp.i

.PHONY : Guards.i

# target to preprocess a source file
Guards.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Guards.cpp.i
.PHONY : Guards.cpp.i

Guards.s: Guards.cpp.s

.PHONY : Guards.s

# target to generate assembly for a file
Guards.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Guards.cpp.s
.PHONY : Guards.cpp.s

Hash.o: Hash.cpp.o

.PHONY : Hash.o

# target to build an object file
Hash.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Hash.cpp.o
.PHONY : Hash.cpp.o

Hash.i: Hash.cpp.i

.PHONY : Hash.i

# target to preprocess a source file
Hash.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Hash.cpp.i
.PHONY : Hash.cpp.i

Hash.s: Hash.cpp.s

.PHONY : Hash.s

# target to generate assembly for a file
Hash.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Hash.cpp.s
.PHONY : Hash.cpp.s

Log.o: Log.cpp.o

.PHONY : Log.o

# target to build an object file
Log.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Log.cpp.o
.PHONY : Log.cpp.o

Log.i: Log.cpp.i

.PHONY : Log.i

# target to preprocess a source file
Log.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Log.cpp.i
.PHONY : Log.cpp.i

Log.s: Log.cpp.s

.PHONY : Log.s

# target to generate assembly for a file
Log.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Log.cpp.s
.PHONY : Log.cpp.s

MemoryDB.o: MemoryDB.cpp.o

.PHONY : MemoryDB.o

# target to build an object file
MemoryDB.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/MemoryDB.cpp.o
.PHONY : MemoryDB.cpp.o

MemoryDB.i: MemoryDB.cpp.i

.PHONY : MemoryDB.i

# target to preprocess a source file
MemoryDB.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/MemoryDB.cpp.i
.PHONY : MemoryDB.cpp.i

MemoryDB.s: MemoryDB.cpp.s

.PHONY : MemoryDB.s

# target to generate assembly for a file
MemoryDB.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/MemoryDB.cpp.s
.PHONY : MemoryDB.cpp.s

RLP.o: RLP.cpp.o

.PHONY : RLP.o

# target to build an object file
RLP.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RLP.cpp.o
.PHONY : RLP.cpp.o

RLP.i: RLP.cpp.i

.PHONY : RLP.i

# target to preprocess a source file
RLP.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RLP.cpp.i
.PHONY : RLP.cpp.i

RLP.s: RLP.cpp.s

.PHONY : RLP.s

# target to generate assembly for a file
RLP.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RLP.cpp.s
.PHONY : RLP.cpp.s

RangeMask.o: RangeMask.cpp.o

.PHONY : RangeMask.o

# target to build an object file
RangeMask.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RangeMask.cpp.o
.PHONY : RangeMask.cpp.o

RangeMask.i: RangeMask.cpp.i

.PHONY : RangeMask.i

# target to preprocess a source file
RangeMask.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RangeMask.cpp.i
.PHONY : RangeMask.cpp.i

RangeMask.s: RangeMask.cpp.s

.PHONY : RangeMask.s

# target to generate assembly for a file
RangeMask.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/RangeMask.cpp.s
.PHONY : RangeMask.cpp.s

SHA3.o: SHA3.cpp.o

.PHONY : SHA3.o

# target to build an object file
SHA3.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/SHA3.cpp.o
.PHONY : SHA3.cpp.o

SHA3.i: SHA3.cpp.i

.PHONY : SHA3.i

# target to preprocess a source file
SHA3.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/SHA3.cpp.i
.PHONY : SHA3.cpp.i

SHA3.s: SHA3.cpp.s

.PHONY : SHA3.s

# target to generate assembly for a file
SHA3.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/SHA3.cpp.s
.PHONY : SHA3.cpp.s

StructuredLogger.o: StructuredLogger.cpp.o

.PHONY : StructuredLogger.o

# target to build an object file
StructuredLogger.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/StructuredLogger.cpp.o
.PHONY : StructuredLogger.cpp.o

StructuredLogger.i: StructuredLogger.cpp.i

.PHONY : StructuredLogger.i

# target to preprocess a source file
StructuredLogger.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/StructuredLogger.cpp.i
.PHONY : StructuredLogger.cpp.i

StructuredLogger.s: StructuredLogger.cpp.s

.PHONY : StructuredLogger.s

# target to generate assembly for a file
StructuredLogger.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/StructuredLogger.cpp.s
.PHONY : StructuredLogger.cpp.s

TransientDirectory.o: TransientDirectory.cpp.o

.PHONY : TransientDirectory.o

# target to build an object file
TransientDirectory.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TransientDirectory.cpp.o
.PHONY : TransientDirectory.cpp.o

TransientDirectory.i: TransientDirectory.cpp.i

.PHONY : TransientDirectory.i

# target to preprocess a source file
TransientDirectory.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TransientDirectory.cpp.i
.PHONY : TransientDirectory.cpp.i

TransientDirectory.s: TransientDirectory.cpp.s

.PHONY : TransientDirectory.s

# target to generate assembly for a file
TransientDirectory.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TransientDirectory.cpp.s
.PHONY : TransientDirectory.cpp.s

TrieCommon.o: TrieCommon.cpp.o

.PHONY : TrieCommon.o

# target to build an object file
TrieCommon.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieCommon.cpp.o
.PHONY : TrieCommon.cpp.o

TrieCommon.i: TrieCommon.cpp.i

.PHONY : TrieCommon.i

# target to preprocess a source file
TrieCommon.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieCommon.cpp.i
.PHONY : TrieCommon.cpp.i

TrieCommon.s: TrieCommon.cpp.s

.PHONY : TrieCommon.s

# target to generate assembly for a file
TrieCommon.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieCommon.cpp.s
.PHONY : TrieCommon.cpp.s

TrieDB.o: TrieDB.cpp.o

.PHONY : TrieDB.o

# target to build an object file
TrieDB.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieDB.cpp.o
.PHONY : TrieDB.cpp.o

TrieDB.i: TrieDB.cpp.i

.PHONY : TrieDB.i

# target to preprocess a source file
TrieDB.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieDB.cpp.i
.PHONY : TrieDB.cpp.i

TrieDB.s: TrieDB.cpp.s

.PHONY : TrieDB.s

# target to generate assembly for a file
TrieDB.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieDB.cpp.s
.PHONY : TrieDB.cpp.s

TrieHash.o: TrieHash.cpp.o

.PHONY : TrieHash.o

# target to build an object file
TrieHash.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieHash.cpp.o
.PHONY : TrieHash.cpp.o

TrieHash.i: TrieHash.cpp.i

.PHONY : TrieHash.i

# target to preprocess a source file
TrieHash.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieHash.cpp.i
.PHONY : TrieHash.cpp.i

TrieHash.s: TrieHash.cpp.s

.PHONY : TrieHash.s

# target to generate assembly for a file
TrieHash.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/TrieHash.cpp.s
.PHONY : TrieHash.cpp.s

Worker.o: Worker.cpp.o

.PHONY : Worker.o

# target to build an object file
Worker.cpp.o:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Worker.cpp.o
.PHONY : Worker.cpp.o

Worker.i: Worker.cpp.i

.PHONY : Worker.i

# target to preprocess a source file
Worker.cpp.i:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Worker.cpp.i
.PHONY : Worker.cpp.i

Worker.s: Worker.cpp.s

.PHONY : Worker.s

# target to generate assembly for a file
Worker.cpp.s:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(MAKE) -f libdevcore/CMakeFiles/devcore.dir/build.make libdevcore/CMakeFiles/devcore.dir/Worker.cpp.s
.PHONY : Worker.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... install"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... devcore"
	@echo "... Base64.o"
	@echo "... Base64.i"
	@echo "... Base64.s"
	@echo "... Common.o"
	@echo "... Common.i"
	@echo "... Common.s"
	@echo "... CommonData.o"
	@echo "... CommonData.i"
	@echo "... CommonData.s"
	@echo "... CommonIO.o"
	@echo "... CommonIO.i"
	@echo "... CommonIO.s"
	@echo "... CommonJS.o"
	@echo "... CommonJS.i"
	@echo "... CommonJS.s"
	@echo "... FileSystem.o"
	@echo "... FileSystem.i"
	@echo "... FileSystem.s"
	@echo "... FixedHash.o"
	@echo "... FixedHash.i"
	@echo "... FixedHash.s"
	@echo "... Guards.o"
	@echo "... Guards.i"
	@echo "... Guards.s"
	@echo "... Hash.o"
	@echo "... Hash.i"
	@echo "... Hash.s"
	@echo "... Log.o"
	@echo "... Log.i"
	@echo "... Log.s"
	@echo "... MemoryDB.o"
	@echo "... MemoryDB.i"
	@echo "... MemoryDB.s"
	@echo "... RLP.o"
	@echo "... RLP.i"
	@echo "... RLP.s"
	@echo "... RangeMask.o"
	@echo "... RangeMask.i"
	@echo "... RangeMask.s"
	@echo "... SHA3.o"
	@echo "... SHA3.i"
	@echo "... SHA3.s"
	@echo "... StructuredLogger.o"
	@echo "... StructuredLogger.i"
	@echo "... StructuredLogger.s"
	@echo "... TransientDirectory.o"
	@echo "... TransientDirectory.i"
	@echo "... TransientDirectory.s"
	@echo "... TrieCommon.o"
	@echo "... TrieCommon.i"
	@echo "... TrieCommon.s"
	@echo "... TrieDB.o"
	@echo "... TrieDB.i"
	@echo "... TrieDB.s"
	@echo "... TrieHash.o"
	@echo "... TrieHash.i"
	@echo "... TrieHash.s"
	@echo "... Worker.o"
	@echo "... Worker.i"
	@echo "... Worker.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /Users/wsd/github-clone/Ethminer-for-macOS/build-cuda && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

